-------------------------------------
--  File         : plugins.lua
--  Description  : 3rd part plugins palette
--  Author       : Kevin
--  Last Modified: 18 Oct 2022, 09:33
-------------------------------------

local base = require "colors.knvim.base"

local plugins = {
  -- Alpha
  AlphaHeader = { fg = "#74D15C" },
  AlphaButtons = { link = "Keyword" },
  AlphaFooter = { link = "Comment" },
  -- Nvim-Tree
  NvimTreeSymlink = { link = "Function" },
  NvimTreeFolderName = { link = "Normal" },
  NvimTreeRootFolder = { link = "Type" },
  NvimTreeFolderIcon = { fg = "#00afd7" },
  NvimTreeFileIcon = { link = "Type" },
  NvimTreeEmptyFolderName = { link = "Comment" },
  NvimTreeOpenedFolderName = { link = "Directory" },
  NvimTreeExecFile = { link = "Underlined" },
  NvimTreeOpenedFile = { bold = true, underline = true },
  NvimTreeSpecialFile = { fg = "#afaf00", bold = true, italic = true },
  NvimTreeImageFile = { link = "Label" },
  NvimTreeIndentMarker = { link = "Comment" },
  -- nvim-treesitter
  ["@none"] = { default = true },
  ["@error"] = {},
  ["@text.title"] = base.Title,
  ["@text.literal"] = base.String,
  ["@text.math"] = base.String,
  ["@text.reference"] = base.Define,
  ["@text.environment"] = base.Typedef,
  ["@text.environment.name"] = base.Type,
  ["@text.uri"] = base.Underlined,
  ["@variable"] = base.k_themeFg1,
  ["@punctuation.delimiter"] = base.Delimiter,
  ["@punctuation.bracket"] = base.Delimiter,
  ["@punctuation.special"] = base.Delimiter,
  ["@constant"] = base.Constant,
  ["@constant.builtin"] = base.Special,
  ["@constant.macro"] = base.Define,
  ["@string"] = base.String,
  ["@string.regex"] = base.String,
  ["@string.escape"] = base.SpecialChar,
  ["@string.special"] = base.SpecialChar,
  ["@character"] = base.Character,
  ["@number"] = base.Number,
  ["@boolean"] = base.Boolean,
  ["@float"] = base.Float,
  ["@function"] = base.Function,
  ["@function.builtin"] = base.Special,
  ["@function.macro"] = base.Macro,
  ["@parameter"] = base.Identifier,
  ["@parameter.reference"] = base.Identifier,
  ["@method"] = base.Function,
  ["@field"] = base.Identifier,
  ["@property"] = base.Identifier,
  ["@constructor"] = base.Special,
  ["@annotation"] = base.PreProc,
  ["@attribute"] = base.PreProc,
  ["@namespace"] = base.Include,
  ["@conditional"] = base.Conditional,
  ["@repeat"] = base.Repeat,
  ["@label"] = base.Label,
  ["@operator"] = base.Operator,
  ["@keyword"] = base.Keyword,
  ["@keyword.function"] = base.Keyword,
  ["@keyword.operator"] = base.k_themeRed,
  ["@exception"] = base.Exception,
  ["@type"] = base.Type,
  ["@type.builtin"] = base.Type,
  ["@include"] = base.Include,
  ["@variable.builtin"] = base.Special,
  ["@text"] = { default = true },
  ["@text.strong"] = { bold = true },
  ["@text.emphasis"] = { italic = true },
  ["@text.underline"] = { underline = true },
  -- ["text.note"] = "TSNote",
  -- ["text.warning"] = "TSWarning",
  -- ["text.danger"] = "TSDanger",
  ["@comment"] = base.Comment,
  ["@structure"] = base.k_themeOrange,
  ["@tag"] = base.k_themeOrange,
  ["@tag.delimiter"] = base.k_themeGreen,
  ["@codeSpan"] = { bg = "#3c3c3c", fg = "#DCDCDC"},
  ["@codeBlock"] = {},
  ["@todo"] = base.Todo,
  -- ["@spell"] = { underline = true },
  -- Telescope.nvim
  TelescopeSelection = { link = "PmenuSel" },
  TelescopeSlectionCaret = { link = "PmenuSbar" },
  TelescopeMultiSelection = { reverse = true },
  TelescopeNormal = { link = "Normal" },
  TelescopeBorder = { link = "WinSeparator" },
  TelescopePromptBorder = { link = "WinSeparator" },
  TelescopeResultsBorder = { link = "WinSeparator" },
  TelescopePreviewBorder = { link = "WinSeparator" },
  TelescopeMatching = { link = "CmpItemAbbrMatch" },
  TelescopePromptPrefix = { fg = "#36FF5A" },
  TelescopePrompt = { link = "TelescopeNormal" },
  -- gitsigns.nvim
  GitSignsAdd = base.k_themeGreenSign,
  GitSignsChange = base.k_themeAquaSign,
  GitSignsDelete = base.k_themeRedSign,
  GitSignsCurrentLineBlame = base.NonText,
  -- nvim-cmp
  CmpItemAbbr = { fg = "#DCDCDC" },
  CmpItemKind = { link = "Type" },
  CmpItemAbbrMatch = { fg = "#40CC7C" },
  CmpItemMenu = { link = "Special" },
  CmpItemAbbrDeprecated = base.k_themeFg0,
  CmpItemAbbrMatchFuzzy = { fg = base.aqua },
  CmpItemKindClass = base.k_themeGreen,
  CmpItemKindConstructor = base.k_themeGreen,
  CmpItemKindField = base.k_themeAqua,
  CmpItemKindFile = base.k_themeOrange,
  CmpItemKindFolder = base.k_themeOrange,
  CmpItemKindFunction = base.k_themePurple,
  CmpItemKindMethod = { link = "Function" },
  CmpItemKindInterface = base.k_themeGreen,
  CmpItemKindKeyword = base.Keyword,
  CmpItemKindSnippet = base.k_themeYellow,
  CmpItemKindText = base.k_themeFg0,
  CmpItemKindValue = base.k_themeOrange,
  CmpItemKindVariable = base.k_themeBlue,
  LuasnipChoiceNode = { fg = "#ff8800", bg = "grey15" },
  LuasnipInsertNode = { fg = "#4fc1ff", bg = "grey15" },
  -- LSP
  LspCodeLens = base.k_themeGray,
  LspReferenceText = { bg = "#3c3c3c" },
  LspReferenceWrite = { fg = "#F1F1F1", bg = "#015A60" },
  LspReferenceRead = { bg = "#3c3c3c" },
  FloatBorder = { fg = "#3D3D40", bg = "#2c2c2c" },
  -- Diagnostic
  DiagnosticError = { fg = "#f44747" },
  DiagnosticsWarning = { fg = "#ff8800" },
  DiagnosticsInformation = { fg = "#ffcc66" },
  DiagnosticsHint = { fg = "#4fc1ff" },
  DiagnosticsSignError = { fg = "#f44747" },
  DiagnosticsSignWarning = { fg = "#ff8800" },
  DiagnosticsSignInformation = { fg = "#ffcc66" },
  DiagnosticsSignHint = { fg = "#4fc1ff" },
  DiagnosticsVirtualTextError = { fg = "#f44747" },
  DiagnosticsVirtualTextWarning = { fg = "#ff8800" },
  DiagnosticsVirtualTextInformation = { fg = "#ffcc66" },
  DiagnosticsVirtualTextHint = { fg = "#4fc1ff" },
  DiagnosticSignError = base.k_themeRedSign,
  DiagnosticUnderlineError = base.k_themeRedUnderline,
  DiagnosticWarn = base.k_themeYellow,
  DiagnosticSignWarn = base.k_themeYellowSign,
  DiagnosticUnderlineWarn = base.k_themeYellowUnderline,
  DiagnosticInfo = base.k_themeBlue,
  DiagnosticSignInfo = base.k_themeBlueSign,
  DiagnosticUnderlineInfo = base.k_themeBlueUnderline,
  DiagnosticHint = base.k_themeAqua,
  DiagnosticSignHint = base.k_themeAquaSign,
  DiagnosticUnderlineHint = base.k_themeAquaUnderline,
  DiagnosticFloatingError = base.k_themeRed,
  DiagnosticFloatingWarn = base.k_themeOrange,
  DiagnosticFloatingInfo = base.k_themeBlue,
  DiagnosticFloatingHint = base.k_themeAqua,
  DiagnosticVirtualTextError = base.k_themeRed,
  DiagnosticVirtualTextWarn = base.k_themeYellow,
  DiagnosticVirtualTextInfo = base.k_themeBlue,
  DiagnosticVirtualTextHint = base.k_themeAqua,
  -- WhichKey
  WhichKey = { link = "Function" },
  WhichKeyGroup = { link = "Type" },
  WhichKeySeparator = { link = "DiffAdded" },
  WhichKeyDesc = { link = "Identifier" },
  WhichKeyFloat = { bg = "#2c2c2c" },
  WhichKeyValue = { link = "Comment" },
  -- Navic
  NavicText = { link = "Comment" },
  NavicSeparator = { link = "Comment" },
  -- Navic-icons
  NavicIconsFile = { link = "CmpItemKindFile" },
  NavicIconsModule = { link = "CmpItemKindClass" },
  NavicIconsNamespace = { link = "CmpItemKindClass" },
  NavicIconsPackage = { link = "CmpItemKindProperty" },
  NavicIconsClass = { link = "CmpItemKindClass" },
  NavicIconsMethod = { link = "CmpItemKindMethod" },
  NavicIconsProperty = { link = "CmpItemKindProperty" },
  NavicIconsField = { link = "CmpItemKindField" },
  NavicIconsConstructor = { link = "CmpItemKindConstructor" },
  NavicIconsEnum = { link = "CmpItemKindValue" },
  NavicIconsInterface = { link = "CmpItemKindInterface" },
  NavicIconsFunction = { link = "CmpItemKindFunction" },
  NavicIconsVariable = { default = true, link = "CmpItemKindVariable" },
  NavicIconsConstant = { link = "CmpItemKindVariable" },
  NavicIconsString = { link = "CmpItemKindText" },
  NavicIconsNumber = { link = "CmpItemKindValue" },
  NavicIconsBoolean = { link = "CmpItemKindValue" },
  NavicIconsArray = { link = "CmpItemKindVariable" },
  NavicIconsObject = { link = "CmpItemKindVariable" },
  NavicIconsKey = { link = "CmpItemKindKeyword" },
  NavicIconsNull = { link = "TSNone" },
  NavicIconsEnumMember = { link = "CmpItemKindVariable" },
  NavicIconsStruct = { link = "CmpItemKindStruct" },
  NavicIconsEvent = { link = "CmpItemKindEvent" },
  NavicIconsOperator = { link = "CmpItemKindOperator" },
  NavicIconsTypeParameter = { link = "CmpItemKindTypeParameter" },
  NavicIconsText = { link = "CmpItemKindText" },
  -- Ufo (Folding)
  UfoPreviewSbar = { link = "PmenuSbar" },
  UfoPreviewThumb = { link = "PmenuThumb" },
  UfoFoldedEllipsis = { link = "Comment" },
  -- Fidget
  FidgetTitle = { link = "Title" },
}

return plugins
